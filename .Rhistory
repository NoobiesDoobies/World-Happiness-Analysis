knitr::opts_chunk$set(echo = TRUE)
happiness <- read.csv("world-happiness-report-2021.csv")
happiness <- read.csv("world-happiness-report-2021.csv")
head(happiness)
happiness <- read.csv("world-happiness-report-2021.csv")
head(happiness)
names(happiness)
happiness
library(dplyr)
happiness %>%
arr
happiness
library(dplyr)
happiness %>%
arrange(desc(Ladder.score))
library(dplyr)
happiness_sorted <- happiness %>%
arrange(desc(Ladder.score))
library(dplyr)
library(ggplot2)
happiness_sorted <- happiness %>%
arrange(desc(Ladder.score))
happiness
library(dplyr)
library(ggplot2)
happiness_sorted <- happiness %>%
arrange(desc(Ladder.score))
ggplot(head(happiness_sorted, 5), mapping=aes(x=Country.name, y=Ladder.score))
library(dplyr)
library(ggplot2)
happiness_sorted <- happiness %>%
arrange(desc(Ladder.score))
ggplot(head(happiness_sorted, 5), mapping=aes(x=Country.name, y=Ladder.score))+
geom_col()
library(dplyr)
library(ggplot2)
happiness_sorted <- happiness %>%
arrange(desc(Ladder.score))
ggplot(head(happiness_sorted, 5), mapping=aes(x=Country.name, y=reorder(Ladder.score)))+
geom_col()
library(dplyr)
library(ggplot2)
happiness_sorted <- happiness %>%
arrange(desc(Ladder.score))
ggplot(head(happiness_sorted, 5), mapping=aes(x=reorder(Country.name, Ladder.score), y=Ladder.score))+
geo
library(dplyr)
library(ggplot2)
happiness_sorted <- happiness %>%
arrange(desc(Ladder.score))
ggplot(head(happiness_sorted, 5), mapping=aes(x=reorder(Country.name, Ladder.score), y=Ladder.score))+
geom_col
library(dplyr)
library(ggplot2)
happiness_sorted <- happiness %>%
arrange(desc(Ladder.score))
ggplot(head(happiness_sorted, 5), mapping=aes(x=reorder(Country.name, Ladder.score), y=Ladder.score))+
geom_col()
library(dplyr)
library(ggplot2)
happiness_sorted <- happiness %>%
arrange(desc(Ladder.score))
ggplot(head(happiness_sorted, 5), mapping=aes(x=reorder(Country.name, Ladder.score), y=Ladder.score))+
geom_col()
ggplot(tail(happiness_sorted, 5), mapping=aes(x=reorder(Country.name, Ladder.score), y=Ladder.score))+
geom_col()
library(dplyr)
library(ggplot2)
happiness_sorted <- happiness %>%
arrange(desc(Ladder.score))
ggplot(head(happiness_sorted, 5), mapping=aes(x=reorder(Country.name, desc(Ladder.score)), y=Ladder.score))+
geom_col()
ggplot(tail(happiness_sorted, 5), mapping=aes(x=reorder(Country.name, desc(Ladder.score)), y=Ladder.score))+
geom_col()
library(dplyr)
library(ggplot2)
happiness_sorted <- happiness %>%
arrange(desc(Ladder.score))
ggplot(head(happiness_sorted, 5), mapping=aes(x=reorder(Country.name, desc(Ladder.score)), y=Ladder.score))+
geom_col(aes(col=Country.name))
ggplot(tail(happiness_sorted, 5), mapping=aes(x=reorder(Country.name, desc(Ladder.score)), y=Ladder.score))+
geom_col()
library(dplyr)
library(ggplot2)
happiness_sorted <- happiness %>%
arrange(desc(Ladder.score))
ggplot(head(happiness_sorted, 5), mapping=aes(x=reorder(Country.name, desc(Ladder.score)), y=Ladder.score))+
geom_col(aes(col=Country.name, fill=Country.name))
ggplot(tail(happiness_sorted, 5), mapping=aes(x=reorder(Country.name, desc(Ladder.score)), y=Ladder.score))+
geom_col()
library(dplyr)
library(ggplot2)
happiness_sorted <- happiness %>%
arrange(desc(Ladder.score))
ggplot(head(happiness_sorted, 5), mapping=aes(x=reorder(Country.name, desc(Ladder.score)), y=Ladder.score))+
geom_col(aes(col=Country.name, fill=Country.name))+
ggplot(tail(happiness_sorted, 5), mapping=aes(x=reorder(Country.name, desc(Ladder.score)), y=Ladder.score))+
geom_col(aes(col=Country.name, fill=Country.name))
library(dplyr)
library(ggplot2)
happiness_sorted <- happiness %>%
arrange(desc(Ladder.score))
ggplot(head(happiness_sorted, 5), mapping=aes(x=reorder(Country.name, desc(Ladder.score)), y=Ladder.score))+
geom_col(aes(col=Country.name, fill=Country.name))
ggplot(tail(happiness_sorted, 5), mapping=aes(x=reorder(Country.name, desc(Ladder.score)), y=Ladder.score))+
geom_col(aes(col=Country.name, fill=Country.name))
# your code here
happiness
# your code here
happiness %>%
select_if(is.numeric)
# your code here
happiness_numeric <- happiness %>%
select_if(is.numeric)
# your code here
happiness_numeric <- happiness %>%
select_if(is.numeric)
happiness_numeric
# your code here
happiness_numeric <- happiness %>%
select_if(is.numeric)
cor(happiness_numeric)
# your code here
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
cor(happiness_numeric)
# your code here
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
happiness_numeric
# your code here
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
cor(happiness_numeric)
# your code here
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
data.frame(cor(happiness_numeric))
# your code here
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
data.frame(cor(happiness_numeric)) %>%
select(Ladder.score)
# your code here
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
data.frame(cor(happiness_numeric))
# your code here
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
happiness_corr <- data.frame(cor(happiness_numeric))
# your code here
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
happiness_corr <- data.frame(cor(happiness_numeric))
ggplot(happiness_corr)+
geom_tile()
melt(data.frame(cor(happiness_numeric)))
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
happiness_corr <- melt(data.frame(cor(happiness_numeric)))
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
happiness_corr <- melt(data.frame(cor(happiness_numeric)))
melt(data.frame(cor(happiness_numeric)))
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
melt(data.frame(cor(happiness_numeric)))
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
melt(data.frame(cor(happiness_numeric)), id=Ladder.score)
melt(data.frame(cor(happiness_numeric)), id=Ladder.score)
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
melt(data.frame(cor(happiness_numeric)), id="Ladder.score")
data.frame(cor(happiness_numeric))
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
happiness_corr <- data.frame(cor(happiness_numeric))
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
happiness_corr <- data.frame(cor(happiness_numeric))
happiness_corr$id <- row.names(happiness_corr)
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
happiness_corr <- data.frame(cor(happiness_numeric))
happiness_corr$id <- row.names(happiness_corr)
happiness_corr
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
happiness_corr <- data.frame(cor(happiness_numeric))
happiness_corr$id <- row.names(happiness_corr)
melt(happiness_corr, id.vars="id")
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
happiness_corr <- data.frame(cor(happiness_numeric))
happiness_corr$id <- row.names(happiness_corr)
happiness_corr <- melt(happiness_corr, id.vars="id")
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
happiness_corr <- data.frame(cor(happiness_numeric))
happiness_corr$id <- row.names(happiness_corr)
happiness_corr <- melt(happiness_corr, id.vars="id")
ggplot(happiness_corr, mapping=aes(id, variable, fill=value))
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
happiness_corr <- data.frame(cor(happiness_numeric))
happiness_corr$id <- row.names(happiness_corr)
happiness_corr <- melt(happiness_corr, id.vars="id")
ggplot(happiness_corr, mapping=aes(id, variable, fill=value))+
geom_tile()
happiness_corr
data.frame(cor(happiness_numeric))
happiness_numeric
happiness_corr
data.frame(cor(happiness_numeric))
cor(happiness$Dystopia...residual, happiness$Ladder.score)
cor(happiness$Dystopia...residual, happiness$Ladder.score)
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
happiness_corr
data.frame(cor(happiness_numeric))
happiness_corr <- data.frame(cor(happiness_numeric))
happiness_corr$id <- row.names(happiness_corr)
happiness_corr <- melt(happiness_corr, id.vars="id")
ggplot(happiness_corr, mapping=aes(id, variable, fill=value))+
geom_tile()
data.frame(cor(happiness_numeric))
data.frame(cor(happiness_numeric))
cor(happiness_numeric)
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
cor(happiness_numeric, use = "complete.obs")
happiness_corr <- data.frame(cor(happiness_numeric))
happiness_corr$id <- row.names(happiness_corr)
happiness_corr <- melt(happiness_corr, id.vars="id")
ggplot(happiness_corr, mapping=aes(id, variable, fill=value))+
geom_tile()
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
cor(happiness_numeric, use = "complete.obs")
happiness_corr <- data.frame(cor(happiness_numeric, use = "complete.obs"))
happiness_corr$id <- row.names(happiness_corr)
happiness_corr <- melt(happiness_corr, id.vars="id")
ggplot(happiness_corr, mapping=aes(id, variable, fill=value))+
geom_tile()
cor(happiness_numeric, use = "complete.obs")
cor(happiness_numeric, method = "pearson", use = "pairwise.complete.obs")
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
happiness_corr <- data.frame(cor(happiness_numeric))
happiness_corr$id <- row.names(happiness_corr)
happiness_corr <- melt(happiness_corr, id.vars="id")
ggplot(happiness_corr, mapping=aes(id, variable, fill=value))+
geom_tile()
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
happiness_corr <- data.frame(cor(happiness_numeric))
happiness_corr$id <- row.names(happiness_corr)
happiness_corr <- melt(happiness_corr, id.vars="id")
ggplot(happiness_corr, mapping=aes(id, variable, fill=value))+
geom_tile()+
theme(text = (rot=90))
# your code here
library(reshape)
happiness_numeric <- happiness %>%
select_if(is.numeric) %>%
select(-c(Standard.error.of.ladder.score, upperwhisker, lowerwhisker))
happiness_corr <- data.frame(cor(happiness_numeric))
happiness_corr$id <- row.names(happiness_corr)
happiness_corr <- melt(happiness_corr, id.vars="id")
ggplot(happiness_corr, mapping=aes(id, variable, fill=value))+
geom_tile()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
happiness
# your code here
ggplot(happiness, mapping=aes(x=Explained.by..Log.GDP.per.capita, y=Ladder.score))
# your code here
ggplot(happiness, mapping=aes(x=Explained.by..Log.GDP.per.capita, y=Ladder.score))+
geom_point()
happiness_sos <- happiness %>%
filter(Country.name %in% c("China", "North Korea", "Cuba", "Vietnam", "Laos"))
happiness_sos <- happiness %>%
filter(Country.name %in% c("China", "North Korea", "Cuba", "Vietnam", "Laos"))
happiness_sos
happiness
happiness %>%
arange(Country.name)
happiness_sos <- happiness %>%
filter(Country.name %in% c("China", "North Korea", "Cuba", "Vietnam", "Laos"))
happiness %>%
filter(Country.name %in% c("Singapore", "New Zealand", "Australia", "Switzerland", "Ireland"))
happiness %>%
filter(Country.name %in% c("Singapore", "New Zealand", "Australia", "Switzerland", "Ireland"))
happiness %>%
filter(Country.name %in% c("China", "North Korea", "Cuba", "Vietnam", "Laos"))
happiness %>%
filter(Country.name %in% c("Singapore", "New Zealand", "Australia", "Switzerland", "Ireland"))
happiness %>%
filter(Country.name %in% c("China", "Venezuela", "Russia", "Vietnam", "Laos"))
happiness_cap <- happiness %>%
filter(Country.name %in% c("Singapore", "New Zealand", "Australia", "Switzerland", "Ireland"))
happiness_sos <-happiness %>%
filter(Country.name %in% c("China", "Venezuela", "Russia", "Vietnam", "Laos"))
happiness_cap <- happiness %>%
filter(Country.name %in% c("Singapore", "New Zealand", "Australia", "Switzerland", "Ireland"))
happiness_sos <-happiness %>%
filter(Country.name %in% c("China", "Venezuela", "Russia", "Vietnam", "Laos"))
happiness_cap+happiness_sos
ggplot(happiness_cap, mapping=aes(Country.name, Ladder.score))
ggplot(happiness_cap, mapping=aes(Country.name, Ladder.score))+
geom_col()
ggplot(happiness_cap, mapping=aes(reorder(Country.name, desc(Ladder.score)), Ladder.score))+
geom_col()
ggplot(happiness_cap, mapping=aes(reorder(Country.name, desc(Ladder.score)), Ladder.score))+
geom_col(aes(col=Ladder.score))
happiness_cap <- happiness %>%
filter(Country.name %in% c("Singapore", "New Zealand", "Australia", "Switzerland", "Ireland"))
happiness_sos <-happiness %>%
filter(Country.name %in% c("China", "Venezuela", "Russia", "Vietnam", "Laos"))
ggplot(happiness_cap, mapping=aes(reorder(Country.name, desc(Ladder.score)), Ladder.score))+
geom_col(aes(col=Ladder.score, fill=Ladder.score))
happiness_cap <- happiness %>%
filter(Country.name %in% c("Singapore", "New Zealand", "Australia", "Switzerland", "Ireland"))
happiness_sos <-happiness %>%
filter(Country.name %in% c("China", "Venezuela", "Russia", "Vietnam", "Laos"))
ggplot(happiness_cap, mapping=aes(reorder(Country.name, desc(Ladder.score)), Ladder.score))+
geom_col(aes(col=Ladder.score, fill=Ladder.score))
ggplot(happiness_sos, mapping=aes(reorder(Country.name, desc(Ladder.score)), Ladder.score))+
geom_col(aes(col=Ladder.score, fill=Ladder.score))
happiness_cap <- happiness %>%
filter(Country.name %in% c("Singapore", "New Zealand", "Australia", "Switzerland", "Ireland"))
happiness_sos <-happiness %>%
filter(Country.name %in% c("China", "Venezuela", "Russia", "Vietnam", "Laos"))
ggplot(merge(happiness_cap, happiness_sos), mapping=aes(reorder(Country.name, desc(Ladder.score)), Ladder.score))+
geom_col(aes(col=Ladder.score, fill=Ladder.score))
happiness_cap <- happiness %>%
filter(Country.name %in% c("Singapore", "New Zealand", "Australia", "Switzerland", "Ireland"))
happiness_sos <-happiness %>%
filter(Country.name %in% c("China", "Venezuela", "Russia", "Vietnam", "Laos"))
ggplot(rbind(happiness_cap, happiness_sos), mapping=aes(reorder(Country.name, desc(Ladder.score)), Ladder.score))+
geom_col(aes(col=Ladder.score, fill=Ladder.score))
happiness_cap <- happiness %>%
filter(Country.name %in% c("Singapore", "New Zealand", "Australia", "Switzerland", "Ireland"))
happiness_sos <-happiness %>%
filter(Country.name %in% c("China", "Venezuela", "Russia", "Vietnam", "Laos"))
ggplot(rbind(happiness_cap, happiness_sos), mapping=aes(reorder(Country.name, desc(Ladder.score)), Ladder.score))+
geom_col(aes(col=Ladder.score, fill=Ladder.score))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
